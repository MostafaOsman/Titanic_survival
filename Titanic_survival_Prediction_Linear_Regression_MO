import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# Load the passenger data
passengers = pd.read_csv('passengers.csv')

# Update sex column to numerical
passengers['Sex'] = passengers['Sex'].map({'female':1,'male':0})

# Fill the nan values in the age column
df_desc= passengers.describe()
av_age = df_desc['Age'].loc['mean']
av_age= "{:.1f}".format(av_age)

#print(df_desc['Age'].loc['mean'])
passengers.fillna({'Age':av_age},inplace = True)
print(passengers['Age'].isna().any())
# Create a first class column
passengers['FirstClass'] = passengers['Pclass'].replace({1:1,2:0,3:0}) 


# Create a second class column
passengers['SecondClass'] = passengers['Pclass'].replace({1:0,2:1,3:0}) 
print(passengers)

# Select the desired features
features = passengers[['Sex','Age','FirstClass','SecondClass']]
print(features)
survival = passengers['Survived']

# Perform train, test, split
X_train,X_test,y_train,y_test= train_test_split(features,survival)
# Scale the feature data so it has mean = 0 and standard deviation = 1
scaler= StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Create and train the model
regressor = LogisticRegression()
regressor.fit(X_train,y_train)

#y_pred = regressor.predict(X_test)

# Score the model on the train data
print(regressor.score(X_train,y_train))

# Score the model on the test data
print(regressor.score(X_test,y_test))

# Analyze the coefficients
print(regressor.coef_)

# Sample passenger features
Jack = np.array([0.0,20.0,0.0,0.0]).reshape(1,4)
Rose = np.array([1.0,17.0,1.0,0.0]).reshape(1,4)
You = np.array([0.0,27.0,0.0,1.0]).reshape(1,4)

# Combine passenger arrays
sample_passengers = np.concatenate((Jack,Rose,You))

# Scale the sample passenger features
sample_passengers= scaler.transform(sample_passengers)

# Make survival predictions!
pred = regressor.predict(sample_passengers)
print(pred)

# Prediction Probability
pred_prob = regressor.predict_proba(sample_passengers)
print(pred_prob)
